{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","replace","completed","className","htmlFor","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bddcd86b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport const getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title: title.replace(/[^a-zA-Zа-яА-Я0-9\\sЇїІіЄє]/g, ''), // optional task\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInputId\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInputId\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </label>\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelectId\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelectId\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\nimport todosFromServer from './api/todos';\n\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(prevTodos => [\n      ...prevTodos,\n      { ...newTodo, id: getNewTodoId(prevTodos) },\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}